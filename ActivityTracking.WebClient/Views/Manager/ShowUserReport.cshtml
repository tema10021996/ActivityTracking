@model  ActivityTracking.WebClient.Models.ShowUserReportViewModel
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
}
<script>
    var colorArray = JSON.parse('@ViewBag.Colors');
</script>

<div class="row alert alert-success" style="margin-top:20px; background-color:#f5f5f5; color:black; font-size:medium">
    <div class="col-md-3">
        <p>
            <b>Company:</b> @Model.UserInfo.userInformarion.Company<br>
            <b>Office Location:</b> @Model.UserInfo.userInformarion.OfficeLocation<br>
            <b>Sector:</b> @Model.UserInfo.userInformarion.Sector<br>
            <b>Department:</b> @Model.UserInfo.userInformarion.Department
        </p>

    </div>
    <div class="col-md-3">
        <p>
            <b>Login:</b> @Model.UserInfo.userInformarion.Login<br>
            <b>Last Name:</b> @Model.UserInfo.userInformarion.LastName<br>
            <b>First Name:</b> @Model.UserInfo.userInformarion.FirstName<br>
            <b>Profession</b>: @Model.UserInfo.userInformarion.Profession

        </p>
    </div>
    <div class="col-md-3">
        <p>
            <b>Title</b>: @Model.UserInfo.userInformarion.Title<br>
            <b>Position:</b> @Model.UserInfo.userInformarion.Position<br>
            <b>Division:</b> @Model.UserInfo.userInformarion.Division<br>
            <b>Role:</b> @Model.UserInfo.userInformarion.Role

        </p>
    </div>
    <div class="col-md-3">
        <p>
            <b>Manager:</b> @Model.UserInfo.userInformarion.Manager<br>
            <b>Hire Date:</b> @Model.UserInfo.userInformarion.HireDate<br>
            <b>ISD Experiance</b>: @Model.UserInfo.userInformarion.ISDExperiance<br>
            <b>Commercial Experiance:</b> @Model.UserInfo.userInformarion.CommercialExperiance
        </p>
    </div>
</div>


@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <div class="row">
        <div class="text-center">
 

            @Html.LabelFor(model => model.Start)

            @Html.EditorFor(model => model.Start)

            @Html.LabelFor(model => model.End)

            @Html.EditorFor(model => model.End)

            <button type="submit" class="btn btn-primary btn-sm">Apply</button>
        </div>
    </div>

}
<br>

    <script type="text/javascript">
        google.charts.load("current", { packages: ["timeline"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var container = document.getElementById('container');
            var chart = new google.visualization.Timeline(container);
            var dataTable = new google.visualization.DataTable();

            dataTable.addColumn({ type: 'string', id: 'Row label' });
            dataTable.addColumn({ type: 'string', id: 'Bar label ' });
            dataTable.addColumn({ type: 'string', role: 'tooltip', p: {'html': true}});
            dataTable.addColumn({ type: 'date', id: 'Start' });
            dataTable.addColumn({ type: 'date', id: 'End' });

            var countOfRows = 0;


            @foreach (var t in Model.listOfWorkAndAbesnceTimeForChart)
            {
                if (t.Comment == null)
                {
                <text>
            dataTable.addRow(['@t.RowLabel', '@t.Barlabel', createCustomHTMLContentWithoutComment('@t.RowLabel', '@t.Barlabel', '@t.StartAbsence.Hour', '@t.StartAbsence.Minute','@t.StartAbsence.Second',
                '@t.EndAbsence.Hour', '@t.EndAbsence.Minute', '@t.EndAbsence.Second', @t.Duration.Hours, @t.Duration.Minutes, @t.Duration.Seconds),
                    new Date(0, 0, 0, @t.StartAbsence.Hour, @t.StartAbsence.Minute, @t.StartAbsence.Second), new Date(0, 0, 0, @t.EndAbsence.Hour, @t.EndAbsence.Minute, @t.EndAbsence.Second)]);
            countOfRows++;
            </text>
            }
            else
            {
                <text>
            dataTable.addRow(['@t.RowLabel', '@t.Barlabel', createCustomHTMLContentWithComment('@t.RowLabel', '@t.Barlabel', '@t.StartAbsence.Hour', '@t.StartAbsence.Minute','@t.StartAbsence.Second',
        '@t.EndAbsence.Hour', '@t.EndAbsence.Minute', '@t.EndAbsence.Second', '@t.Duration.Hours', '@t.Duration.Minutes', '@t.Duration.Seconds', '@t.Comment'),
                    new Date(0, 0, 0, @t.StartAbsence.Hour, @t.StartAbsence.Minute, @t.StartAbsence.Second), new Date(0, 0, 0, @t.EndAbsence.Hour, @t.EndAbsence.Minute, @t.EndAbsence.Second)]);
            countOfRows++;
            </text>
            }
        }
           
            var options = {
                tooltip: {isHtml: true},
                timeline: { groupByRowLabel: true},
                focusTarget: 'category',
                colors: colorArray,
                backgroundColor: '#d3d3d3',
                height: @Model.DaysCount*41+110
            };
            chart.draw(dataTable, options);
        }
        function createCustomHTMLContentWithoutComment(userName, reasonName, startHour, startMinute, startSecond, endHour, endMinute, endSecond, durationHours, durationMinutes, durationSeconds){
            return '<div style="padding:20px; width:375px;">'+ '<b>'+userName+'</b>' +'<hr>'+ '<b>'+'Reason: ' +'</b>'+ reasonName + '<br>' +
               '<b>' + 'Range: '+'</b>' + startHour + 'h, ' + startMinute + 'm, ' + startSecond + 's - ' +  endHour + 'h, ' + endMinute + 'm, ' + endSecond + 's' + '<br>' +
               '<b>' + 'Duration: '+'</b>'+ durationHours +'hours'+ ', ' + durationMinutes + 'minutes' + ', ' + durationSeconds + 'seconds' + '</div>';
        }

        function createCustomHTMLContentWithComment(userName, reasonName, startHour, startMinute, startSecond, endHour, endMinute, endSecond, durationHours, durationMinutes, durationSeconds, comment){
            return '<div style="padding:20px; width:275px;">'+ '<b>'+userName+'</b>' +'<hr>'+ '<b>'+'Reason: ' +'</b>'+ reasonName + '<br>' +
                '<b>' + 'Range: '+'</b>' + startHour + 'h, ' + startMinute + 'm, ' + startSecond + 's - ' +  endHour + 'h, ' + endMinute + 'm, ' + endSecond + 's' + '<br>' +
               '<b>' + 'Duration: '+'</b>'+ durationHours +'hours'+ ', ' + durationMinutes + 'minutes' + ', ' + durationSeconds + 'seconds' + '<br>' +'<b style = "color:red">' + 'Comment: ' +'</b>' +comment +'</div>';
        }

    </script>

    <div id="container"></div>




